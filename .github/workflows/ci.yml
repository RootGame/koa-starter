name: CI
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
jobs:
  lint-and-test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'
      - name: Restore Npm Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Lint and Test
        run: |
          npm run test
          npm run eslint:check
  release:
    name: Release
    env:
      DIST_ARCHIVE_NAME: ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Archive Release
        uses: papeloto/action-zip@v1
        with:
          files: |
            ./
          recursive: false
          dest: ${{ env.DIST_ARCHIVE_NAME }}-${{ steps.get_version.outputs.VERSION }}.zip
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm install
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: '.github/config/changelog_configuration.json'
          ignorePreReleases: 'false'
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.build_changelog.outputs.changelog}}
          files: |
            ${{ env.DIST_ARCHIVE_NAME }}-${{ steps.get_version.outputs.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  push-release-message:
    name: Push Release Message
    runs-on: ubuntu-latest
    needs: [release]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Push Release Message
        uses: funnyzak/pushoo-action@main
        with:
          platforms: ifttt,wecombot,bark
          tokens: ${{ secrets.PUSH_TOKEN }}
          content: |
            # ${{ github.event.repository.name }} Released
            ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
            ## commit message: ${{ github.event.head_commit.message }}
            ## commit url: ${{ github.event.head_commit.url }}
            ## commit author: ${{ github.event.head_commit.author.name }}
            ## commit email: ${{ github.event.head_commit.author.email }}
            ## commit id: ${{ github.event.head_commit.id }}
          title: |
            ${{ github.repository }} ${{ github.event_name }} Message
          options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
          debug: false
  